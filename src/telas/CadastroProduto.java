/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CadastroProduto.java
 *
 * Created on 24/12/2010, 23:51:58
 */

package telas;

import classes.Combo;
import classes.ConexaoPostgresql;
import classes.Funcoes;
import classes.TextDocument;
import java.awt.Dimension;
import java.sql.ResultSet;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;

/**
 *
 * @author jeff
 */
public class CadastroProduto extends javax.swing.JInternalFrame {

    private ConexaoPostgresql Conexao;
    private Funcoes Fun;
    private TextDocument TD;

    /** Creates new form CadastroProduto */
    public CadastroProduto() {
        initComponents();
        JogarUnidade();
        JogarFabricante();
        JogarStatus();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlbCodigo = new javax.swing.JLabel();
        jtfCodigo = new javax.swing.JTextField();
        jlbNome = new javax.swing.JLabel();
        jtfNome = new javax.swing.JTextField();
        jlbUnidade = new javax.swing.JLabel();
        jcbMedida = new javax.swing.JComboBox();
        jlbDescricao = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtpDescricao = new javax.swing.JTextPane();
        jbtSalvar = new javax.swing.JButton();
        jbtNovo = new javax.swing.JButton();
        jbtPesquisar = new javax.swing.JButton();
        jbtExcluir = new javax.swing.JButton();
        jtfCodFornecedor = new javax.swing.JFormattedTextField();
        jlbCodFornecedor = new javax.swing.JLabel();
        jtfNCM = new javax.swing.JFormattedTextField();
        jlbNCM = new javax.swing.JLabel();
        jtfQtde = new javax.swing.JFormattedTextField();
        jlbqtde = new javax.swing.JLabel();
        jlbQtdeMaxima = new javax.swing.JLabel();
        jtfQtdeMaxima = new javax.swing.JFormattedTextField();
        jlbQtdeMinima = new javax.swing.JLabel();
        jtfQtdeMinima = new javax.swing.JFormattedTextField();
        jlbFabricante = new javax.swing.JLabel();
        jcbFabricante = new javax.swing.JComboBox();
        jlbStatus = new javax.swing.JLabel();
        jcbStatus = new javax.swing.JComboBox();

        setClosable(true);
        setTitle("Cadastro de Produto");

        jlbCodigo.setText("Código");

        jtfCodigo.setEditable(false);

        jlbNome.setText("Nome");

        jtfNome.setDocument(TD = new TextDocument(100));

        jlbUnidade.setText("Unidade de Medida");

        jcbMedida.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jlbDescricao.setText("Descrição");

        jScrollPane1.setViewportView(jtpDescricao);

        jbtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Salvar.png"))); // NOI18N
        jbtSalvar.setText("Salvar");
        jbtSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbtSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSalvarActionPerformed(evt);
            }
        });

        jbtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Novo.png"))); // NOI18N
        jbtNovo.setText("Novo");
        jbtNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbtNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtNovoActionPerformed(evt);
            }
        });

        jbtPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Pesquisa.png"))); // NOI18N
        jbtPesquisar.setText("Pesquisar");
        jbtPesquisar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbtPesquisar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbtPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtPesquisarActionPerformed(evt);
            }
        });

        jbtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Excluir.png"))); // NOI18N
        jbtExcluir.setText("Excluir");
        jbtExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbtExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtExcluirActionPerformed(evt);
            }
        });

        jtfCodFornecedor.setDocument(TD = new TextDocument(30));
        jtfCodFornecedor.setToolTipText("");

        jlbCodFornecedor.setText("Código do Fornecedor");

        jtfNCM.setDocument(TD = new TextDocument(8));

        jlbNCM.setText("NCM");

        jtfQtde.setEnabled(false);

        jlbqtde.setText("Qtde");

        jlbQtdeMaxima.setText("Qtde Máxima");

        jtfQtdeMaxima.setDocument(TD = new TextDocument(4));

        jlbQtdeMinima.setText("Qtde Mínima");

        jtfQtdeMinima.setDocument(TD = new TextDocument(4));

        jlbFabricante.setText("Fabricante");

        jcbFabricante.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jlbStatus.setText("Status");

        jcbStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlbCodigo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlbCodFornecedor)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jtfCodFornecedor)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlbQtdeMinima)
                            .addComponent(jtfQtdeMinima, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jlbQtdeMaxima, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jtfQtdeMaxima, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfQtde, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlbqtde))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlbStatus)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jcbStatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jbtNovo)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jbtSalvar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jbtExcluir)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jbtPesquisar))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jcbFabricante, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jtfNome, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jlbNome)
                                    .addComponent(jlbFabricante)
                                    .addComponent(jlbDescricao)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jlbNCM)
                                            .addComponent(jtfNCM, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jlbUnidade)
                                            .addComponent(jcbMedida, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jbtExcluir, jbtNovo, jbtPesquisar, jbtSalvar});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbCodigo)
                    .addComponent(jlbCodFornecedor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfCodFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlbNome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfNome, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbUnidade)
                    .addComponent(jlbNCM))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbMedida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfNCM, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlbFabricante)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcbFabricante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlbQtdeMaxima)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfQtdeMaxima, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfQtdeMinima, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jlbQtdeMinima)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlbStatus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlbqtde)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfQtde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlbDescricao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jbtNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbtSalvar))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jbtExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbtPesquisar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jbtExcluir, jbtNovo, jbtPesquisar, jbtSalvar});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jcbStatus, jtfCodFornecedor, jtfCodigo, jtfNCM, jtfNome, jtfQtde, jtfQtdeMaxima, jtfQtdeMinima});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSalvarActionPerformed

        String Codigo;
        int Unidade = ((Combo)jcbMedida.getSelectedItem()).getKey();
        int Fabricante = ((Combo)jcbFabricante.getSelectedItem()).getKey();
        int Ativo = ((Combo)jcbStatus.getSelectedItem()).getKey();

        Fun = new Funcoes();
        Codigo = Fun.Proximo("codigo", "t_produto", "");

        if (jtfCodigo.getText().equals("")){
            jtfCodigo.setText(Codigo);
        }

        Conexao = new ConexaoPostgresql();
        Conexao.Conectar();
        Conexao.setSQL("select * from t_produto where codigo = " + jtfCodigo.getText() + " and exclusao = 0 ");
        ResultSet RS = Conexao.Consultar();

        try {
            if(RS.next()){
                String SQL;                
                SQL = "update t_produto set codigo_fornecedor = '" + jtfCodFornecedor.getText() + "', ";
                SQL = SQL + "nome = '" + jtfNome.getText() + "', ";
                SQL = SQL + "ncm = '" + jtfNCM.getText() + "', ";
                SQL = SQL + "codigomedida = " + Unidade + ", ";
                SQL = SQL + "codigo_cad_fornecedor = " + Fabricante + ", ";
                SQL = SQL + "qtde_min = " + jtfQtdeMinima.getText() + ", ";
                SQL = SQL + "qtde_max = " + jtfQtdeMaxima.getText() + ", ";
                SQL = SQL + "codigo_ativo = " + Ativo + ", ";
                SQL = SQL + "descricao = '" + jtpDescricao.getText() + "' ";
                SQL = SQL + "where codigo = " + jtfCodigo.getText() + "";
                Conexao.setSQL(SQL);
                Conexao.Executar();
            } else {
                String SQL;
                SQL = "insert into t_produto (codigo, codigo_fornecedor, nome, ncm, codigomedida, codigo_cad_fornecedor, qtde_min, qtde_max, qtde, ";
                SQL = SQL + "codigo_ativo, descricao, exclusao";
                SQL = SQL + ") values(";
                SQL = SQL + jtfCodigo.getText() + ", '" + jtfCodFornecedor.getText() + "', '" + jtfNome.getText() + "', '" + jtfNCM.getText() + "', ";
                SQL = SQL + Unidade + ", " + Fabricante + ", " + jtfQtdeMinima.getText() + ", " + jtfQtdeMaxima.getText() + ", 0, ";
                SQL = SQL + Ativo + ", '" + jtpDescricao.getText() + "', 0)";
                Conexao.setSQL(SQL);
                Conexao.Executar();
            }

        } catch (Exception Erro){
            JOptionPane.showMessageDialog(null, "Erro na validação: " + Erro);
        }

        Conexao.Desconectar();

        Limpar();

        jtfNome.requestFocus();

    }//GEN-LAST:event_jbtSalvarActionPerformed

    private void jbtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtNovoActionPerformed

        Limpar();

        jtfNome.requestFocus();
        
    }//GEN-LAST:event_jbtNovoActionPerformed

    private void jbtPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtPesquisarActionPerformed

        PesquisaProduto A = new PesquisaProduto();
        A.setVisible(true);
        JDesktopPane JDP = this.getDesktopPane();
        JDP.add(A);
        A.centralizar(JDP);
        try{
            A.setSelected(true);
            A.SetProduto(this);
        }catch (Exception E){
            JOptionPane.showMessageDialog(null, "Erro: " + E);
        }
        A.setVisible(true);

    }//GEN-LAST:event_jbtPesquisarActionPerformed

    private void jbtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtExcluirActionPerformed

        Object[] botoes = { "Sim", "Não" };

        int resposta;

        resposta = JOptionPane.showOptionDialog(null, "Você deseja realmente excluir este registro?", "Confirma exclusão", JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE, null, botoes, botoes[0]);

        if(resposta == JOptionPane.YES_OPTION){

            String SQL = "update t_produto set exclusao = 1 where codigo = '" + jtfCodigo.getText() + "'";

            Conexao = new ConexaoPostgresql();
            Conexao.Conectar();
            Conexao.setSQL(SQL);
            Conexao.Executar();
            Conexao.Desconectar();

            Limpar();

        }

        jtfNome.requestFocus();

    }//GEN-LAST:event_jbtExcluirActionPerformed

    public void CarregaDados(String Codigo){

        String SQL;

        SQL = "select tpr.codigo, tpr.codigo_fornecedor, tpr.nome, tpr.ncm, tpr.codigomedida, tpr.codigo_cad_fornecedor, (tps.nome) as fornecedor, ";
        SQL = SQL + "tun.unidade, tpr.qtde_min, tpr.qtde_max, tpr.codigo_ativo, (tst.nome) as ativo, tpr.qtde, tpr.descricao ";
        SQL = SQL + "from t_produto tpr ";
        SQL = SQL + "inner join t_unidade tun on tun.codigo = tpr.codigomedida ";
        SQL = SQL + "inner join t_pessoa tps on tps.codigo = tpr.codigo_cad_fornecedor ";
        SQL = SQL + "inner join t_status tst on tst.codigo = tpr.codigo_ativo ";
        SQL = SQL + "where tpr.codigo = " + Codigo + " ";
        SQL = SQL + "and tpr.exclusao = 0 ";

        Conexao = new ConexaoPostgresql();
        Conexao.Conectar() ;
        Conexao.setSQL(SQL);

        ResultSet RS = Conexao.Consultar();

        try{
            if (RS.next()){

                jtfCodigo.setText(RS.getString("codigo"));
                jtfCodFornecedor.setText(RS.getString("codigo_fornecedor"));
                jtfNome.setText(RS.getString("nome"));
                jtfNCM.setText(RS.getString("ncm"));

                Combo Unidade = new Combo(Integer.parseInt(RS.getString("codigomedida")), RS.getString("unidade"));
                ComboBoxModel CBM1;
                CBM1 = jcbMedida.getModel();
                CBM1.setSelectedItem(Unidade);
                                
                Combo Fornecedor = new Combo(Integer.parseInt(RS.getString("codigo_cad_fornecedor")), RS.getString("fornecedor"));
                ComboBoxModel CBM2;
                CBM2 = jcbFabricante.getModel();
                CBM2.setSelectedItem(Fornecedor);
                
                jtfQtdeMinima.setText(RS.getString("qtde_min"));
                jtfQtdeMaxima.setText(RS.getString("qtde_max"));
                jtfQtde.setText(RS.getString("qtde"));                
                
                Combo Ativo = new Combo(Integer.parseInt(RS.getString("codigo_ativo")), RS.getString("ativo"));
                ComboBoxModel CBM3;
                CBM3 = jcbStatus.getModel();
                CBM3.setSelectedItem(Ativo);
                
                jtpDescricao.setText(RS.getString("descricao"));

                jtfNome.requestFocus();

            }
        }catch (Exception Erro){
            JOptionPane.showMessageDialog(null, "Erro na validação: " + Erro);
        }
    }

    private void Limpar(){

        jtfCodigo.setText("");
        jtfCodFornecedor.setText("");
        jtfNome.setText("");
        jtfNCM.setText("");
        jcbMedida.removeAllItems();
        JogarUnidade();
        jcbFabricante.removeAllItems();
        JogarFabricante();
        jtfQtdeMinima.setText("");
        jtfQtdeMaxima.setText("");
        jtfQtde.setText("");
        jcbStatus.removeAllItems();
        JogarStatus();
        jtpDescricao.setText("");

    }

    private void JogarUnidade(){

        jcbMedida.removeAllItems();
        try {
            Conexao = new ConexaoPostgresql();
            Conexao.Conectar();
            Conexao.setSQL("select codigo, (unidade) as nome from t_unidade where exclusao = 0 order by unidade");
            ResultSet RS = Conexao.Consultar();
            DefaultComboBoxModel Modelo = new DefaultComboBoxModel();
            while(RS.next()){
                Combo cboF = new Combo(Integer.parseInt(RS.getString("codigo")),RS.getString("nome"));
                Modelo.addElement(cboF);
            }
            jcbMedida.setModel(Modelo);
        } catch(Exception Erro){
            JOptionPane.showMessageDialog(null, "Erro: " + Erro);
        }

    }

    private void JogarFabricante(){

        jcbFabricante.removeAllItems();
        try {
            Conexao = new ConexaoPostgresql();
            Conexao.Conectar();
            Conexao.setSQL("select codigo, nome from t_pessoa where exclusao = 0 order by nome");
            ResultSet RS = Conexao.Consultar();
            DefaultComboBoxModel Modelo = new DefaultComboBoxModel();
            while(RS.next()){
                Combo cboF = new Combo(Integer.parseInt(RS.getString("codigo")),RS.getString("nome"));
                Modelo.addElement(cboF);
            }
            jcbFabricante.setModel(Modelo);
        } catch(Exception Erro){
            JOptionPane.showMessageDialog(null, "Erro: " + Erro);
        }

    }
    
    private void JogarStatus(){

        jcbStatus.removeAllItems();
        try {
            Conexao = new ConexaoPostgresql();
            Conexao.Conectar();
            Conexao.setSQL("select codigo, nome from t_status where exclusao = 0 order by nome");
            ResultSet RS = Conexao.Consultar();
            DefaultComboBoxModel Modelo = new DefaultComboBoxModel();
            while(RS.next()){
                Combo cboF = new Combo(Integer.parseInt(RS.getString("codigo")),RS.getString("nome"));
                Modelo.addElement(cboF);
            }
            jcbStatus.setModel(Modelo);
        } catch(Exception Erro){
            JOptionPane.showMessageDialog(null, "Erro: " + Erro);
        }

    }
    
    public static void main(String args[]) {
       java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroProduto().setVisible(true);
            }
        });
    }

    public void centralizar(JDesktopPane dp) {
        Dimension ds = dp.getSize();
        Dimension dw = this.getSize();
        this.setLocation((ds.width - dw.width) / 2, (ds.height - dw.height) / 2);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtExcluir;
    private javax.swing.JButton jbtNovo;
    private javax.swing.JButton jbtPesquisar;
    private javax.swing.JButton jbtSalvar;
    private javax.swing.JComboBox jcbFabricante;
    private javax.swing.JComboBox jcbMedida;
    private javax.swing.JComboBox jcbStatus;
    private javax.swing.JLabel jlbCodFornecedor;
    private javax.swing.JLabel jlbCodigo;
    private javax.swing.JLabel jlbDescricao;
    private javax.swing.JLabel jlbFabricante;
    private javax.swing.JLabel jlbNCM;
    private javax.swing.JLabel jlbNome;
    private javax.swing.JLabel jlbQtdeMaxima;
    private javax.swing.JLabel jlbQtdeMinima;
    private javax.swing.JLabel jlbStatus;
    private javax.swing.JLabel jlbUnidade;
    private javax.swing.JLabel jlbqtde;
    private javax.swing.JFormattedTextField jtfCodFornecedor;
    private javax.swing.JTextField jtfCodigo;
    private javax.swing.JFormattedTextField jtfNCM;
    private javax.swing.JTextField jtfNome;
    private javax.swing.JFormattedTextField jtfQtde;
    private javax.swing.JFormattedTextField jtfQtdeMaxima;
    private javax.swing.JFormattedTextField jtfQtdeMinima;
    private javax.swing.JTextPane jtpDescricao;
    // End of variables declaration//GEN-END:variables

}
