/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import classes.ConexaoPostgresql;
import classes.Funcoes;
import classes.TextDocument;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.UUID;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Estoque
 */
public class MovimentacaoViagemAbrir extends javax.swing.JInternalFrame {

    private ConexaoPostgresql Conexao;
    private ConexaoPostgresql Conexao2;
    private Funcoes Fun;    
    private TextDocument TD;
    
    int CapturarLinha;
    double ValorTotal = 0;
    
    /**
     * Creates new form MovimentacaoViagemAbrir
     */
    public MovimentacaoViagemAbrir() {
        initComponents();
    }
    
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MovimentacaoViagemAbrir().setVisible(true);
            }
        });
    }

    public void centralizar(JDesktopPane dp) {
        Dimension ds = dp.getSize();
        Dimension dw = this.getSize();
        this.setLocation((ds.width - dw.width) / 2, (ds.height - dw.height) / 2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlbTecnico = new javax.swing.JLabel();
        jtfNomeTecnico = new javax.swing.JFormattedTextField();
        jlbProduto = new javax.swing.JLabel();
        jtfCodigoProduto = new javax.swing.JFormattedTextField();
        jtfNomeProduto = new javax.swing.JFormattedTextField();
        jtfQtde = new javax.swing.JFormattedTextField();
        jlbQtde = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jlbData = new javax.swing.JLabel();
        jdcData = new com.toedter.calendar.JDateChooser();
        jlbDestino = new javax.swing.JLabel();
        jtfDestino = new javax.swing.JFormattedTextField();
        jbtNovo = new javax.swing.JButton();
        jbtSalvar = new javax.swing.JButton();
        jbtExcluir = new javax.swing.JButton();
        jbtPesquisar = new javax.swing.JButton();
        jlbCodigo = new javax.swing.JLabel();
        jtfCodigo = new javax.swing.JFormattedTextField();
        jtfCodigoTecnico = new javax.swing.JFormattedTextField();
        jbtAdd = new javax.swing.JButton();
        jbtDel = new javax.swing.JButton();

        setClosable(true);
        setTitle("Abrir Viagem Técnica");

        jlbTecnico.setText("Técnico (F12)");

        jtfNomeTecnico.setEnabled(false);

        jlbProduto.setText("Produto (F12)");

        jtfCodigoProduto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfCodigoProdutoFocusLost(evt);
            }
        });
        jtfCodigoProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfCodigoProdutoKeyPressed(evt);
            }
        });

        jtfNomeProduto.setEnabled(false);

        jlbQtde.setText("Qtde");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Status", "Código", "Produto", "Qtde"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(10);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(10);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(300);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(50);
        }

        jlbData.setText("Data");

        jlbDestino.setText("Destino");

        jbtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Novo.png"))); // NOI18N
        jbtNovo.setText("Novo");
        jbtNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbtNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtNovoActionPerformed(evt);
            }
        });

        jbtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Salvar.png"))); // NOI18N
        jbtSalvar.setText("Salvar");
        jbtSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbtSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSalvarActionPerformed(evt);
            }
        });

        jbtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Excluir.png"))); // NOI18N
        jbtExcluir.setText("Excluir");
        jbtExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbtExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtExcluirActionPerformed(evt);
            }
        });

        jbtPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Pesquisa.png"))); // NOI18N
        jbtPesquisar.setText("Pesquisar");
        jbtPesquisar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbtPesquisar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbtPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtPesquisarActionPerformed(evt);
            }
        });

        jlbCodigo.setText("Código");

        jtfCodigo.setEnabled(false);

        jtfCodigoTecnico.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfCodigoTecnicoFocusLost(evt);
            }
        });
        jtfCodigoTecnico.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfCodigoTecnicoKeyPressed(evt);
            }
        });

        jbtAdd.setText("ADD");
        jbtAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtAddActionPerformed(evt);
            }
        });

        jbtDel.setText("DEL");
        jbtDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtDelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 662, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlbCodigo)
                            .addComponent(jtfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jdcData, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlbData))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlbDestino)
                            .addComponent(jtfDestino)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jbtNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(jbtSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(jbtExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(jbtPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jlbTecnico)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jtfCodigoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfNomeProduto))
                            .addComponent(jlbProduto))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlbQtde)
                            .addComponent(jtfQtde, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtDel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jtfCodigoTecnico, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfNomeTecnico)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlbCodigo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlbData)
                            .addComponent(jlbDestino))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jdcData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlbTecnico)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfNomeTecnico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfCodigoTecnico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlbProduto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfCodigoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbtAdd)
                            .addComponent(jbtDel)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlbQtde)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfQtde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbtNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtNovoActionPerformed

        Limpar();

        jdcData.requestFocus();
        
        jbtSalvar.setEnabled(true);
        
    }//GEN-LAST:event_jbtNovoActionPerformed

    private void jbtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSalvarActionPerformed

        String Viagem_cod = null;
        
        if (jtfCodigo.getText().equals("")){
            Fun = new Funcoes();
            jtfCodigo.setText(Fun.Proximo("codigo", "t_viagem", ""));
        }

        Conexao = new ConexaoPostgresql();
        Conexao.Conectar();
        Conexao.setSQL("select * from t_viagem where codigo = " + jtfCodigo.getText() + " and exclusao = 0");
        ResultSet RS = Conexao.Consultar();

        String myDate = null;

        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        myDate = sdf.format(jdcData.getDate());        

        try {
            if(RS.next()){
//                String SQL;
                
                int linha_total = jTable1.getRowCount();
                int contador = 1;
                
                while(contador <= linha_total){
                
                    int linha = contador - 1;

                    String SQL2 = null;

                    String Status = "", ViagemCod = "", Ordem = "", CodigoProduto = "",  NomeProduto = "", Qtde = "";
                    
                    Fun = new Funcoes();
                    
                    Status = jTable1.getValueAt(linha, 1).toString();
                    ViagemCod = jtfCodigo.getText();
                    Ordem = jTable1.getValueAt(linha, 0).toString();
                    CodigoProduto = jTable1.getValueAt(linha, 2).toString();
                    Qtde = jTable1.getValueAt(linha, 4).toString();

                    if (Status.equals("UPD")){

                        SQL2 = "update t_viagem_item set ";
                        SQL2 = SQL2 + "produto_cod = " + CodigoProduto + ", ";
                        SQL2 = SQL2 + "qtde = " + Qtde + ", ";
                        SQL2 = SQL2 + "where codigo = " + Ordem + " ";
                        SQL2 = SQL2 + "and codigo_viagem = " + ViagemCod + " ";
                        SQL2 = SQL2 + "and exclusao = 0 ";

                        Conexao2 = new ConexaoPostgresql();
                        Conexao2.Conectar();
                        Conexao2.setSQL(SQL2);
                        Conexao2.Executar();

                    } else if (Status.equals("DEL")){
                        
                        SQL2 = "update t_viagem_item set ";
                        SQL2 = SQL2 + "exclusao = 1 ";
                        SQL2 = SQL2 + "where codigo = " + Ordem + " ";
                        SQL2 = SQL2 + "and viagem_cod = " + ViagemCod + " ";
                        
                        Conexao2 = new ConexaoPostgresql();
                        Conexao2.Conectar();
                        Conexao2.setSQL(SQL2);
                        Conexao2.Executar();                        
                        
                    } else if (Status.equals("INC")){
                        
                        SQL2 = "insert into t_viagem_item (codigo_viagem, produto_cod, qtde_liberada, qtde_devolvida, exclusao) ";
                        SQL2 = SQL2 + "values (";
                        SQL2 = SQL2 + "" + ViagemCod + ", ";
                        SQL2 = SQL2 + "" + CodigoProduto + ", ";
                        SQL2 = SQL2 + "" + Qtde + ", 0, ";
                        SQL2 = SQL2 + "0)";

                        Conexao2 = new ConexaoPostgresql();
                        Conexao2.Conectar();
                        Conexao2.setSQL(SQL2);
                        Conexao2.Executar();
                        
                    }
                    
                    contador++;

                }

//                Conexao.setSQL(SQL);
//                Conexao.Executar();
                
            } else {
                
                String SQL, Senha;
                
                UUID uuid = UUID.randomUUID();    
                String myRandom = uuid.toString();    
                Senha = myRandom.substring(0,8);

                SQL = "insert into t_viagem (data_abrir, data_finalizar, destino, tecnico_cod, senha, exclusao) ";
                SQL = SQL + "values ('" + myDate + "', null, '" + jtfDestino.getText() + "', " + jtfCodigoTecnico.getText() + ", ";
                SQL = SQL + "'" + Senha + "', 0)";

                Conexao.setSQL(SQL);
                Conexao.Executar();
                
                int linha_total = jTable1.getRowCount();
                int contador = 1;
                
                Viagem_cod = BuscaCodigoSenha(Senha);
                
                while(contador <= linha_total){
                
                    int linha = contador - 1;

                    String SQL2 = null;

                    String Status = "", CodigoProduto = "", Qtde = "";

                    Fun = new Funcoes();
                    
                    Status = jTable1.getValueAt(linha, 1).toString();
                    CodigoProduto = jTable1.getValueAt(linha, 2).toString();
                    Qtde = jTable1.getValueAt(linha, 4).toString();
                    
                    if (Status.equals("INC")){

                        SQL2 = "insert into t_viagem_item (codigo_viagem, produto_cod, qtde_liberada, qtde_devolvida, exclusao) ";
                        SQL2 = SQL2 + "values (";
                        SQL2 = SQL2 + "" + Viagem_cod + ", ";
                        SQL2 = SQL2 + "" + CodigoProduto + ", ";
                        SQL2 = SQL2 + "" + Qtde + ", 0, 0)";

                        Conexao2 = new ConexaoPostgresql();
                        Conexao2.Conectar();
                        Conexao2.setSQL(SQL2);
                        Conexao2.Executar();                     

                    }
                    
                    contador++;

                }
                
            }

        } catch (Exception Erro) {
            JOptionPane.showMessageDialog(null, "Erro na validação: " + Erro);
        }

        Conexao.Desconectar();
        Conexao2.Desconectar();

        Limpar();

        jdcData.requestFocus();

    }//GEN-LAST:event_jbtSalvarActionPerformed

    private void jbtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtExcluirActionPerformed

        if (!(jtfCodigo.getText().trim().equals(""))) {

            Object[] botoes = { "Sim", "Não" };

            int resposta;

            resposta = JOptionPane.showOptionDialog(null, "Você deseja realmente excluir este registro?", "Confirma exclusão", JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE, null, botoes, botoes[0]);

            if(resposta == JOptionPane.YES_OPTION){

                String SQL = "update t_viagem set exclusao = 1 where codigo = " + jtfCodigo.getText() + " ";

                Conexao = new ConexaoPostgresql();
                Conexao.Conectar();
                Conexao.setSQL(SQL);
                Conexao.Executar();
                Conexao.Desconectar();

                Limpar();

            }

            jdcData.requestFocus();

        }

    }//GEN-LAST:event_jbtExcluirActionPerformed

    private void jbtPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtPesquisarActionPerformed

        PesquisaViagemAbrir A = new PesquisaViagemAbrir();
        A.setVisible(true);
        JDesktopPane JDP = this.getDesktopPane();
        JDP.add(A);
        A.centralizar(JDP);
        try{
            A.setSelected(true);
            A.SetViagem(this);
            A.Validador("ViagemAbrir");
        }catch (Exception E){
            JOptionPane.showMessageDialog(null, "Erro: " + E);
        }
        A.setVisible(true);

    }//GEN-LAST:event_jbtPesquisarActionPerformed

    private void jbtAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtAddActionPerformed

        String Status = "", CodigoProduto, NomeProduto, Qtde;

        Status = "INC";
        CodigoProduto = jtfCodigoProduto.getText();
        NomeProduto = jtfNomeProduto.getText();
        Qtde = jtfQtde.getText();

        try{

            DefaultTableModel Tabela = (DefaultTableModel) jTable1.getModel();
            Object[] CarLinha = {"", Status, CodigoProduto, NomeProduto, Qtde};
            Tabela.addRow(CarLinha);

        }catch (Exception Erro){
            JOptionPane.showMessageDialog(null, "Erro na validação: " + Erro);
        }

        jtfCodigoProduto.setText("");
        jtfNomeProduto.setText("");
        jtfQtde.setText("");
        
        jtfCodigoProduto.requestFocus();

    }//GEN-LAST:event_jbtAddActionPerformed

    private void jbtDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtDelActionPerformed

        String Operacao = "DEL";

        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        int Linha = CapturarLinha;

        String OP = String.valueOf(modelo.getValueAt(CapturarLinha, 0));

        if (OP.equals("DEL")){
            if (jtfCodigo.getText().trim().equals("")) {
                Operacao = "INC";
            } else {
                Operacao = "UPD";
            }
            modelo.setValueAt(Operacao, Linha, 1);
        } else {
            Operacao = "DEL";
            modelo.setValueAt(Operacao, Linha, 1);
        }

    }//GEN-LAST:event_jbtDelActionPerformed

    private void jtfCodigoTecnicoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCodigoTecnicoKeyPressed
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
           
            jtfNomeTecnico.setText(NomeTecnico(Integer.parseInt(jtfCodigoTecnico.getText())));
            
            jtfCodigoProduto.requestFocus();

        }
        
        if(evt.getKeyCode() == KeyEvent.VK_F12){
        
            SubPesquisaPessoa A = new SubPesquisaPessoa();
            A.setVisible(true);
            JDesktopPane JDP = this.getDesktopPane();
            JDP.add(A);
            A.centralizar(JDP);
            try{
                A.setSelected(true);
                A.SetSubViagemAbrir(this);
                A.Validador("ViagemAbrir");
            }catch (Exception E){
                JOptionPane.showMessageDialog(null, "Erro: " + E);
            }
            A.setVisible(true);
            
        }
        
    }//GEN-LAST:event_jtfCodigoTecnicoKeyPressed

    private void jtfCodigoProdutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCodigoProdutoKeyPressed
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
           
            jtfNomeProduto.setText(NomeProduto(Integer.parseInt(jtfCodigoProduto.getText())));
            
            jtfQtde.requestFocus();

        }
        
        if(evt.getKeyCode() == KeyEvent.VK_F12){
        
            SubPesquisaProduto A = new SubPesquisaProduto();
            A.setVisible(true);
            JDesktopPane JDP = this.getDesktopPane();
            JDP.add(A);
            A.centralizar(JDP);
            try{
                A.setSelected(true);
                A.SetSubViagemAbrir(this);
                A.Validador("ViagemAbrirProduto");
            }catch (Exception E){
                JOptionPane.showMessageDialog(null, "Erro: " + E);
            }
            A.setVisible(true);
            
        }
        
    }//GEN-LAST:event_jtfCodigoProdutoKeyPressed

    private void jtfCodigoTecnicoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCodigoTecnicoFocusLost
        
        if (!(jtfCodigoTecnico.getText().trim().equals(""))) {
        
            jtfNomeTecnico.setText(NomeTecnico(Integer.parseInt(jtfCodigoTecnico.getText())));
            
            jtfCodigoProduto.requestFocus();
        
        }
        
    }//GEN-LAST:event_jtfCodigoTecnicoFocusLost

    private void jtfCodigoProdutoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCodigoProdutoFocusLost
        
        if (!(jtfCodigoProduto.getText().trim().equals(""))) {
        
            jtfNomeProduto.setText(NomeProduto(Integer.parseInt(jtfCodigoProduto.getText())));
            
            jtfQtde.requestFocus();
        
        }
        
    }//GEN-LAST:event_jtfCodigoProdutoFocusLost

    private void Limpar (){
        
        jtfCodigo.setText("");
        jdcData.setDate(new java.util.Date());
        jtfDestino.setText("");
        jtfCodigoTecnico.setText("");
        jtfNomeTecnico.setText("");
        jtfCodigoProduto.setText("");
        jtfNomeProduto.setText("");
        jtfQtde.setText("");
        
        DefaultTableModel tableModel =(DefaultTableModel) jTable1.getModel();  
        tableModel.setNumRows(0); 
        
    }
    
    public String NomeTecnico (int CodigoFabricante){
    
        String Fabricante = null;
        
        Fun = new Funcoes();
        Fabricante = Fun.NomePessoa(CodigoFabricante);
        
        return Fabricante;        
    
    }

    public void NomePessoaViaF12 (int CodigoPessoa){
        
        jtfCodigoTecnico.setText(String.valueOf(CodigoPessoa));
        jtfNomeTecnico.setText(NomeTecnico(CodigoPessoa));
        
    }
    
    public void CarregarDados(String Codigo){
        
        String SQL, SQL2;
        
        SQL = "select tv.codigo, to_char(tv.data_abrir,'DD/MM/YYYY') as dataabrir, ";
        SQL = SQL + "tv.destino, tv.tecnico_cod, (tp.nome) as tecnico ";
        SQL = SQL + "from t_viagem tv ";
        SQL = SQL + "inner join t_pessoa tp on tp.codigo = tv.tecnico_cod ";
        SQL = SQL + "where tv.codigo = " + Codigo + " ";
        SQL = SQL + "and tv.exclusao = 0 ";
        
        Conexao = new ConexaoPostgresql();
        Conexao.Conectar() ;
        Conexao.setSQL(SQL);

        ResultSet RS = Conexao.Consultar();
        
        try{
            if (RS.next()){
                jtfCodigo.setText(RS.getString("codigo"));
                jdcData.setDateFormatString(RS.getString("dataabrir"));
                jtfDestino.setText(RS.getString("destino"));
                jtfCodigoTecnico.setText(RS.getString("tecnico_cod"));
                jtfNomeTecnico.setText(RS.getString("tecnico"));                
            }
        }catch (Exception Erro){
            JOptionPane.showMessageDialog(null, "Erro na validação: " + Erro);
        }
        
        Conexao.Desconectar();
        
        SQL2 = "select tvi.codigo, tvi.produto_cod, (tpr.nome) as produto, tvi.qtde_liberada ";
        SQL2 = SQL2 + "from t_viagem_item tvi ";
        SQL2 = SQL2 + "inner join t_produto tpr on tpr.codigo = tvi.produto_cod ";
        SQL2 = SQL2 + "where tvi.codigo_viagem = " + Codigo + " ";
        SQL2 = SQL2 + "and tvi.exclusao = 0 ";
        
        Conexao2 = new ConexaoPostgresql();
        Conexao2.Conectar() ;
        Conexao2.setSQL(SQL2);

        ResultSet RS2 = Conexao2.Consultar();
        
        try{
            while (RS2.next()){
                DefaultTableModel Tabela = (DefaultTableModel) jTable1.getModel();
                Object[] CarLinha = {RS2.getString("codigo"),"UPD",RS2.getString("produto_cod"),RS2.getString("produto"),RS2.getString("qtde_liberada")};
                Tabela.addRow(CarLinha);
            }
        }catch (Exception Erro){
            JOptionPane.showMessageDialog(null, "Erro na validação: " + Erro);
        }
        
        Conexao2.Desconectar();
        
        jbtSalvar.setEnabled(false);
        
    }
    
    public String NomeProduto (int CodigoProduto){
    
        String Produto = null;
        
        Fun = new Funcoes();
        Produto = Fun.NomeProduto(CodigoProduto);
        
        return Produto;        
    
    }
    
    public void NomeProdutoViaF12 (int CodigoProduto){
        
        jtfCodigoProduto.setText(String.valueOf(CodigoProduto));
        jtfNomeProduto.setText(NomeProduto(CodigoProduto));
        
    } 
    
    private String BuscaCodigoSenha (String password){
        
        String SQL;
        String Codigo = null;
        
        SQL = "select codigo from t_viagem where senha = '" + password + "' and exclusao = 0 ";
        
        Conexao = new ConexaoPostgresql();
        Conexao.Conectar() ;
        Conexao.setSQL(SQL);

        ResultSet RS = Conexao.Consultar();
        
        try{
            if (RS.next()){
                Codigo = RS.getString("codigo");
            }
        }catch (Exception Erro){
            JOptionPane.showMessageDialog(null, "Erro na validação: " + Erro);
        }
        
        Conexao.Desconectar();
        
        return Codigo;
        
    }
    
    private void LimpaSenha (String Codigo){
        
        String SQL;
        
        SQL = "update t_viagem set senha = null where codigo = " + Codigo + " and exclusao = 0 ";
        
        Conexao = new ConexaoPostgresql();
        Conexao.Conectar() ;
        Conexao.setSQL(SQL);
        Conexao.Executar();
        Conexao.Desconectar();
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbtAdd;
    private javax.swing.JButton jbtDel;
    private javax.swing.JButton jbtExcluir;
    private javax.swing.JButton jbtNovo;
    private javax.swing.JButton jbtPesquisar;
    private javax.swing.JButton jbtSalvar;
    private com.toedter.calendar.JDateChooser jdcData;
    private javax.swing.JLabel jlbCodigo;
    private javax.swing.JLabel jlbData;
    private javax.swing.JLabel jlbDestino;
    private javax.swing.JLabel jlbProduto;
    private javax.swing.JLabel jlbQtde;
    private javax.swing.JLabel jlbTecnico;
    private javax.swing.JFormattedTextField jtfCodigo;
    private javax.swing.JFormattedTextField jtfCodigoProduto;
    private javax.swing.JFormattedTextField jtfCodigoTecnico;
    private javax.swing.JFormattedTextField jtfDestino;
    private javax.swing.JFormattedTextField jtfNomeProduto;
    private javax.swing.JFormattedTextField jtfNomeTecnico;
    private javax.swing.JFormattedTextField jtfQtde;
    // End of variables declaration//GEN-END:variables
}
